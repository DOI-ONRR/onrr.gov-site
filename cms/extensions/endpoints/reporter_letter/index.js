"use strict";const e=require("node-fetch"),t=require("fs"),s=async(s,o)=>{console.log("------------------------------------------------------------------------------------"),console.log("                                                                    "),console.log("url:  ",o),console.log("                                                                    "),console.log("------------------------------------------------------------------------------------");let r=((e,s)=>new Promise(((o,r)=>{const a=t.createWriteStream(s);e.pipe(a).on("finish",o).on("error",r)})))((await e(o)).body,s);return r};module.exports=(e,{services:t,exceptions:o})=>{const{ItemsService:r}=t,{ServiceUnavailableException:a}=o;e.get("/:date",((e,t,o)=>{const n=new r("reporter_letters",{schema:e.schema,accountability:e.accountability}),c=e.params.date;n.readByQuery({fields:["*"],filter:{date:{_eq:c}}}).then((async e=>{const o="/tmp/reporter_letter."+c,r="/assets/"+e[0].file;return await s(o,"https://dev-onrr-cms.app.cloud.gov"+r),t.sendFile(o)})).catch((e=>o(new a(e.message))))})),e.get("/:date/:index",((e,t,o)=>{const n=new r("reporter_letters",{schema:e.schema,accountability:e.accountability}),c=e.params.date,i=e.params.index-1;n.readByQuery({fields:["*"],filter:{date:{_eq:c}}}).then((async e=>{console.debug("----------------------------------------------------------------------------------"),console.debug(i),console.debug("----------------------------------------------------------------------------------"),t.setHeader("Content-Disposition","filename="+e[i].title+".pdf"),t.setHeader("Content-Type","application/pdf");const o="/tmp/reporter_letter."+e[i].file,r="/assets/"+e[i].file;return await s(o,"https://dev-onrr-cms.app.cloud.gov"+r+".pdf"),t.sendFile(o)})).catch((e=>o(new a(e.message))))}))};
