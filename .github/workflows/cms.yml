name: CMS Pipeline

on:
  push:
    paths: 'cms/**'
    branches-ignore:
      - main
  
  pull_request:
    paths: 'cms/**'
    types: [closed]
    branches:
      - dev
      - main

  workflow_dispatch:

jobs:
  gate:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'push' || 
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    steps:
      - run: echo "Ok to proceed with build"
  build-cms-extensions:
    needs: gate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install CMS dependencies
        run: npm ci
        working-directory: cms

      - name: Install document dependencies
        run: npm ci
        working-directory: cms/src/extensions/endpoints/document

      - name: Install image-uploader dependencies
        run: npm ci
        working-directory: cms/src/extensions/endpoints/image-uploader

      - name: Install link-autocomplete dependencies
        run: npm ci
        working-directory: cms/src/extensions/endpoints/link-autocomplete

      - name: Install onrr-flows dependencies
        run: npm ci
        working-directory: cms/src/extensions/endpoints/onrr-flows

      - name: Install press-releases dependencies
        run: npm ci
        working-directory: cms/src/extensions/endpoints/press-releases

      - name: Install reporter-letters dependencies
        run: npm ci
        working-directory: cms/src/extensions/endpoints/reporter-letters

      - name: Install unbundling dependencies
        run: npm ci
        working-directory: cms/src/extensions/endpoints/unbundling

      - name: Install index-zones dependencies
        run: npm ci
        working-directory: cms/src/extensions/hooks/index-zones

      - name: Install indian-gas-major-portion dependencies
        run: npm ci
        working-directory: cms/src/extensions/hooks/indian-gas-major-portion

      - name: Install ibmp dependencies
        run: npm ci
        working-directory: cms/src/extensions/hooks/ibmp

      - name: Install nymex dependencies
        run: npm ci
        working-directory: cms/src/extensions/hooks/nymex

      - name: Install onrr-editor dependencies
        run: npm ci --legacy-peer-deps
        working-directory: cms/src/extensions/interfaces/onrr-editor

      - name: Install wysiwyg-static dependencies
        run: npm ci 
        working-directory: cms/src/extensions/endpoints/wysiwyg-static

      - name: Install onrr-wysiwyg dependencies
        run: npm ci 
        working-directory: cms/src/extensions/interfaces/onrr-wysiwyg

      - name: Install onrr-generate-uuid dependencies
        run: npm ci
        working-directory: cms/src/extensions/operations/onrr-generate-uuid

      - name: Build extensions
        run: npm run build:all
        working-directory: cms

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cms-extensions
          path: cms/extensions/**
  build-tinymce:
    needs: build-cms-extensions
    runs-on: ubuntu-latest
    env:
      TINYMCE_REF: "8.0.2"
      EXT_DIR: "cms/extensions/interfaces/onrr-wysiwyg"
      SRC_DIR: "cms/src/extensions/interfaces/onrr-wysiwyg"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Download build artifacts from previous job
        uses: actions/download-artifact@v4
        with:
          name: cms-extensions
          path: cms/extensions

      - name: Checkout TinyMCE (shallow)
        uses: actions/checkout@v4
        with:
          repository: tinymce/tinymce
          ref: ${{ env.TINYMCE_REF }}
          path: tinymce
          fetch-depth: 1

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
          cache-dependency-path: |
            tinymce/yarn.lock
            tinymce/package-lock.json

      - name: Copy TinyMCE skin LESS
        shell: bash
        run: |
          mkdir -p tinymce/modules/oxide/src/less/skins/ui/default/
          shopt -s nullglob
          cp -v "${SRC_DIR}/src/tinymce/modules/oxide/src/less/skins/ui/default/"* \
                "tinymce/modules/oxide/src/less/skins/ui/default/"
          shopt -u nullglob
      
      - name: Build TinyMCE Oxide 
        working-directory: tinymce
        run: |
          yarn
          yarn oxide-build

      - name: (Debug) Check extensions
        run: ls -ltr "cms/extensions"

      - name: Copy compiled skins into extension
        run: |
          cp -R tinymce/modules/oxide/build/* "${EXT_DIR}/public/tinymce/"
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cms-extensions
          path: cms/extensions/**
  deploy-cms:
    needs: build-tinymce
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: cms-extensions
          path: cms/extensions

      - name: Deploy CMS
        working-directory: cms
        run: ../.github/scripts/deploy.sh --branch ${{ github.ref_name }}
        env:
          CF_USERNAME: ${{ secrets.CF_USERNAME }}
          CF_PASSWORD: ${{ secrets.CF_PASSWORD }}