{"version":3,"sources":["webpack:///./src/components/blocks/ExpansionPanelBlock.vue?b692","webpack:///./src/components/blocks/ExpansionPanelBlock.vue?4868","webpack:///src/components/blocks/ExpansionPanelBlock.vue","webpack:///./src/components/blocks/ExpansionPanelBlock.vue?adff","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///./src/components/blocks/ExpansionPanelBlock.vue?0a12"],"names":["_vm","this","_h","$createElement","_c","_self","staticClass","attrs","openedPanel","_l","block","i","key","scopedSlots","_u","fn","_v","proxy","_s","item","block_label","panelBlocks","staticRenderFns","name","props","disabled","readonly","Boolean","data","content","header","nextIsActive","computed","classes","groupClasses","isDisabled","expansionPanels","isReadonly","methods","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","onClick","e","toggle","render","h","class","String","baseMixins","isActive","parentIsActive","expansionPanel","watch","immediate","handler","isBooted","oldVal","$nextTick","created","beforeDestroy","showLazyContent","directives","value","ripple","disableIconRotate","expandIcon","type","default","hideActions","hasMousedown","genIcon","icon","VIcon","setBackgroundColor","tabindex","on","click","mousedown","mouseup","open","provide","accordion","flat","hover","focusable","inset","popout","tile","$attrs","hasOwnProperty","Array","length","updateItem","getValue","nextValue","index","toggleMethod","component","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels"],"mappings":"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","file":"js/ExpansionPanelBlock.8368d738.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExpansionPanelBlock.vue?vue&type=style&index=0&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"pa-1\"},[_c('v-expansion-panels',{attrs:{\"accordion\":\"\",\"value\":_vm.openedPanel}},_vm._l((_vm.blockItems),function(block,i){return _c('v-expansion-panel',{key:i,staticClass:\"mb-4\",attrs:{\"disable-icon-rotate\":\"\"}},[_c('v-expansion-panel-header',{attrs:{\"color\":\"expansionPanel\"},scopedSlots:_vm._u([{key:\"actions\",fn:function(){return [_c('v-icon',{staticClass:\"v-icon-plus\",attrs:{\"color\":\"secondary\"}},[_vm._v(\" mdi-plus-box \")]),_c('v-icon',{staticClass:\"v-icon-minus\",attrs:{\"color\":\"secondary\"}},[_vm._v(\" mdi-minus-box \")])]},proxy:true}],null,true)},[_vm._v(\" \"+_vm._s(block.item.block_label)+\" \")]),_c('v-expansion-panel-content',{staticClass:\"pt-4\"},[_c('LayoutBlock',{attrs:{\"layoutBlocks\":block.panelBlocks}})],1)],1)}),1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"pa-1\">\n        <v-expansion-panels\n            accordion\n            :value=\"openedPanel\">\n            <v-expansion-panel\n            v-for=\"(block,i) in blockItems\"\n            :key=\"i\"\n            class=\"mb-4\"\n            disable-icon-rotate\n            >\n            <v-expansion-panel-header color=\"expansionPanel\">\n                {{ block.item.block_label }}\n                <template v-slot:actions>\n                    <v-icon color=\"secondary\" class=\"v-icon-plus\">\n                       mdi-plus-box\n                    </v-icon>\n                    <v-icon color=\"secondary\" class=\"v-icon-minus\">\n                       mdi-minus-box\n                    </v-icon>\n                </template>\n            </v-expansion-panel-header>\n            <v-expansion-panel-content class=\"pt-4\">\n                <LayoutBlock :layoutBlocks=\"block.panelBlocks\"></LayoutBlock>\n            </v-expansion-panel-content>\n            </v-expansion-panel>\n        </v-expansion-panels>\n    </div>\n    \n</template>\n\n<script>\nconst LayoutBlock = () => import(/* webpackChunkName: \"LayoutBlock\" */ '@/components/blocks/LayoutBlock')\n\nimport { \n  pageBlockMixin,\n  editorBlockMixin\n} from '@/mixins'\nexport default {\n    mixins: [pageBlockMixin, editorBlockMixin],\n    name: 'ExpansionPanelBlock',\n    data() {\n        return {\n            panels: []\n        }\n    },\n    props: {\n        block: [Array, Object],\n    },\n    components: {\n        LayoutBlock\n    },\n    methods: {\n        getAllIndexes(arr, val) {\n            const indexes = []\n            let i = -1\n            while ((i = arr.indexOf(val, i+1)) != -1){\n                indexes.push(i)\n            }\n            return indexes\n        }\n    },\n    computed: {\n        blockItems() {\n            const blocks = this.block.item.expansion_panel_blocks\n            const blockItems = []\n\n            blocks && blocks.forEach(obj => {\n                if(obj.item !== null) {\n                    if (obj && obj.item.__typename === 'expansion_panel_block_label') {\n                        this.panels.push(obj)\n                        blockItems.push({ ...obj, panelBlocks: [] })\n                    } else {\n                        blockItems[blockItems.length - 1].panelBlocks.push(obj)\n                    }\n                }\n            })\n            return blockItems\n        },\n        openedPanel() {\n            const defaultBlockId = this.block.item.open_by_default?.id\n            let defaultId\n            if (defaultBlockId) {\n                defaultId = this.panels.findIndex(block => block.item.id === defaultBlockId)\n            }\n            return defaultId\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\">\n.v-expansion-panel-header {\n    font-size: 1.2rem;\n    font-weight: bold;\n}\n\n.v-icon {\n    color: var(--v-secondary-base) !important;\n}\n\n.v-expansion-panel-header .v-icon-minus {\n    display: none;\n}\n\n.v-expansion-panel-header.v-expansion-panel-header--active .v-icon-plus {\n    display: none;\n}\n\n.v-expansion-panel-header.v-expansion-panel-header--active .v-icon-minus {\n    display: block;\n}\n\n\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExpansionPanelBlock.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExpansionPanelBlock.vue?vue&type=script&lang=js&\"","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  data: () => ({\n    isActive: false,\n  }),\n\n  computed: {\n    parentIsActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  watch: {\n    parentIsActive: {\n      immediate: true,\n      handler (val, oldVal) {\n        if (val) this.isBooted = true\n\n        if (oldVal == null) this.isActive = val\n        else this.$nextTick(() => this.isActive = val)\n      },\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n        'aria-expanded': this.isActive,\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","import { render, staticRenderFns } from \"./ExpansionPanelBlock.vue?vue&type=template&id=6afc41fc&\"\nimport script from \"./ExpansionPanelBlock.vue?vue&type=script&lang=js&\"\nexport * from \"./ExpansionPanelBlock.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ExpansionPanelBlock.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\ninstallComponents(component, {VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels,VIcon})\n"],"sourceRoot":""}