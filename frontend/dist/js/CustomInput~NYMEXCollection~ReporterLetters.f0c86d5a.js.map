{"version":3,"sources":["webpack:///../../../src/components/VSubheader/index.ts","webpack:///../../../src/components/VMenu/index.ts","webpack:///../../../src/components/VChip/index.ts","webpack:///../../../src/components/VCheckbox/VSimpleCheckbox.ts","webpack:///../../../src/components/VDivider/VDivider.ts","webpack:///../../../src/components/VDivider/index.ts","webpack:///../../../src/components/VSelect/VSelectList.ts","webpack:///../../../src/mixins/filterable/index.ts","webpack:///../../../src/components/VSelect/VSelect.ts","webpack:///../../../src/components/VSubheader/VSubheader.ts"],"names":["name","functional","directives","ripple","props","disabled","type","default","value","indeterminate","indeterminateIcon","onIcon","offIcon","render","children","listeners","icon","h","dark","light","staticClass","center","data","class","on","click","e","f","inset","vertical","Boolean","this","$attrs","role","orientation","themeClasses","attrs","$listeners","mixins","action","dense","hideSelected","items","itemDisabled","String","Array","itemText","itemValue","noDataText","noFilter","searchInput","selectedItems","computed","parsedItems","map","item","tileActiveClass","Object","setTextColor","staticNoDataTile","tile","undefined","mousedown","$createElement","VListItem","genTileContent","methods","genAction","VListItemAction","VSimpleCheckbox","color","input","genDivider","genFilteredText","text","getMaskedCharacters","end","start","genHighlight","middle","genHeader","VSubheader","index","genTile","hasItem","getDisabled","id","_uid","activeClass","inputValue","$scopedSlots","length","parent","scopedSlot","needsTile","innerHTML","getText","VList","domProps","indexOf","getValue","slot","itemsLength","$slots","tabindex","defaultMenuProps","closeOnClick","closeOnContentClick","disableKeys","openOnClick","maxHeight","baseMixins","ClickOutside","appendIcon","attach","cacheItems","chips","clearable","deletableChips","disableLookup","eager","itemColor","menuProps","multiple","openOnClear","returnObject","smallChips","cachedItems","menuIsBooted","isMenuActive","lastItem","lazyValue","selectedIndex","keyboardLookupPrefix","keyboardLookupLastTime","allItems","filterDuplicates","concat","classes","computedItems","computedOwns","computedCounterValue","counterValue","isFocused","handler","closeConditional","include","dynamicHeight","hasChips","hasSlot","isDirty","listData","scopeId","$vnode","context","$vuetify","lang","t","select","selectItem","scopedSlots","staticList","console","VSelectList","virtualizedItems","$_menuProps","slice","menuCanShow","normalisedProps","split","acc","p","nudgeBottom","watch","internalValue","window","immediate","blur","activateMenu","clearableCallback","getContent","contains","$el","uniqueValues","arr","val","findExistingIndex","i","$refs","menu","genChipSelection","isDisabled","isInteractive","VChip","close","small","key","JSON","genCommaSelection","last","genDefaultSlot","selections","prefix","genAffix","suffix","genIcon","VInput","mergeData","genInput","readonly","autocomplete","placeholder","persistentPlaceholder","keypress","onKeyPress","genHiddenInput","attrs$","genInputSlot","genList","genListWithSlot","slots","slotName","genMenu","VMenu","scroll","onScroll","ref","genSelections","genSelection","genSlotSelection","selection","selected","getMenuIndex","onBlur","$emit","onChipInput","setValue","onClick","isAppendInner","onEscDown","KEYBOARD_LOOKUP_THRESHOLD","now","performance","findIndex","Math","setTimeout","onKeyDown","isReadonly","keyCode","onUpDown","onTabDown","onSpaceDown","onMenuActiveChange","onMouseUp","hasMouseDown","showMoreItems","scrollHeight","scrollTop","requestAnimationFrame","activeTile","setMenuIndex","setSelectedItems","values","v","valueComparator","appendInner"],"mappings":"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","file":"js/CustomInput~NYMEXCollection~ReporterLetters.f0c86d5a.js","sourcesContent":["import VSubheader from './VSubheader'\n\nexport { VSubheader }\nexport default VSubheader\n","import VMenu from './VMenu'\n\nexport { VMenu }\nexport default VMenu\n","import VChip from './VChip'\n\nexport { VChip }\nexport default VChip\n","import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data, listeners }): VNode {\n    const children = []\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    return h('div',\n      mergeData(data, {\n        class: {\n          'v-simple-checkbox': true,\n          'v-simple-checkbox--disabled': props.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (data.on && data.on.input && !props.disabled) {\n              wrapInArray(data.on.input).forEach(f => f(!props.value))\n            }\n          },\n        },\n      }), [\n        h('div', { staticClass: 'v-input--selection-controls__input' }, children),\n      ])\n  },\n})\n","// Styles\nimport './VDivider.sass'\n\n// Types\nimport { VNode } from 'vue'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\nexport default Themeable.extend({\n  name: 'v-divider',\n\n  props: {\n    inset: Boolean,\n    vertical: Boolean,\n  },\n\n  render (h): VNode {\n    // WAI-ARIA attributes\n    let orientation\n    if (!this.$attrs.role || this.$attrs.role === 'separator') {\n      orientation = this.vertical ? 'vertical' : 'horizontal'\n    }\n    return h('hr', {\n      class: {\n        'v-divider': true,\n        'v-divider--inset': this.inset,\n        'v-divider--vertical': this.vertical,\n        ...this.themeClasses,\n      },\n      attrs: {\n        role: 'separator',\n        'aria-orientation': orientation,\n        ...this.$attrs,\n      },\n      on: this.$listeners,\n    })\n  },\n})\n","import VDivider from './VDivider'\n\nexport { VDivider }\nexport default VDivider\n","// Components\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VDivider from '../VDivider'\nimport VSubheader from '../VSubheader'\nimport {\n  VList,\n  VListItem,\n  VListItemAction,\n  VListItemContent,\n  VListItemTitle,\n} from '../VList'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport {\n  escapeHTML,\n  getPropertyFromItem,\n} from '../../util/helpers'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType, VNodeChildren } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\ntype ListTile = { item: any, disabled?: null | boolean, value?: boolean, index: number };\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: null as unknown as PropType<any>,\n    selectedItems: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n  },\n\n  computed: {\n    parsedItems (): any[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    tileActiveClass (): string {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ')\n    },\n    staticNoDataTile (): VNode {\n      const tile = {\n        attrs: {\n          role: undefined,\n        },\n        on: {\n          mousedown: (e: Event) => e.preventDefault(), // Prevent onBlur from being called\n        },\n      }\n\n      return this.$createElement(VListItem, tile, [\n        this.genTileContent(this.noDataText),\n      ])\n    },\n  },\n\n  methods: {\n    genAction (item: object, inputValue: any): VNode {\n      return this.$createElement(VListItemAction, [\n        this.$createElement(VSimpleCheckbox, {\n          props: {\n            color: this.color,\n            value: inputValue,\n            ripple: false,\n          },\n          on: {\n            input: () => this.$emit('select', item),\n          },\n        }),\n      ])\n    },\n    genDivider (props: { [key: string]: any }) {\n      return this.$createElement(VDivider, { props })\n    },\n    genFilteredText (text: string) {\n      text = text || ''\n\n      if (!this.searchInput || this.noFilter) return escapeHTML(text)\n\n      const { start, middle, end } = this.getMaskedCharacters(text)\n\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`\n    },\n    genHeader (props: { [key: string]: any }): VNode {\n      return this.$createElement(VSubheader, { props }, props.header)\n    },\n    genHighlight (text: string): string {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`\n    },\n    getMaskedCharacters (text: string): {\n      start: string\n      middle: string\n      end: string\n    } {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase()\n      const index = text.toLocaleLowerCase().indexOf(searchInput)\n\n      if (index < 0) return { start: text, middle: '', end: '' }\n\n      const start = text.slice(0, index)\n      const middle = text.slice(index, index + searchInput.length)\n      const end = text.slice(index + searchInput.length)\n      return { start, middle, end }\n    },\n    genTile ({\n      item,\n      index,\n      disabled = null,\n      value = false,\n    }: ListTile): VNode | VNode[] | undefined {\n      if (!value) value = this.hasItem(item)\n\n      if (item === Object(item)) {\n        disabled = disabled !== null\n          ? disabled\n          : this.getDisabled(item)\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          id: `list-item-${this._uid}-${index}`,\n          role: 'option',\n        },\n        on: {\n          mousedown: (e: Event) => {\n            // Prevent onBlur from being called\n            e.preventDefault()\n          },\n          click: () => disabled || this.$emit('select', item),\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value,\n        },\n      }\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [\n          this.action && !this.hideSelected && this.items.length > 0\n            ? this.genAction(item, value)\n            : null,\n          this.genTileContent(item, index),\n        ])\n      }\n\n      const parent = this\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: {\n          ...tile.attrs,\n          ...tile.props,\n        },\n        on: tile.on,\n      })\n\n      return this.needsTile(scopedSlot)\n        ? this.$createElement(VListItem, tile, scopedSlot)\n        : scopedSlot\n    },\n    genTileContent (item: any, index = 0): VNode {\n      const innerHTML = this.genFilteredText(this.getText(item))\n\n      return this.$createElement(VListItemContent,\n        [this.$createElement(VListItemTitle, {\n          domProps: { innerHTML },\n        })]\n      )\n    },\n    hasItem (item: object) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1\n    },\n    needsTile (slot: VNode[] | undefined) {\n      return slot!.length !== 1 ||\n        slot![0].componentOptions == null ||\n        slot![0].componentOptions.Ctor.options.name !== 'v-list-item'\n    },\n    getDisabled (item: object) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false))\n    },\n    getText (item: object) {\n      return String(getPropertyFromItem(item, this.itemText, item))\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n  },\n\n  render (): VNode {\n    const children: VNodeChildren = []\n    const itemsLength = this.items.length\n    for (let index = 0; index < itemsLength; index++) {\n      const item = this.items[index]\n\n      if (this.hideSelected &&\n        this.hasItem(item)\n      ) continue\n\n      if (item == null) children.push(this.genTile({ item, index }))\n      else if (item.header) children.push(this.genHeader(item))\n      else if (item.divider) children.push(this.genDivider(item))\n      else children.push(this.genTile({ item, index }))\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile)\n\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item'])\n\n    this.$slots['append-item'] && children.push(this.$slots['append-item'])\n\n    return this.$createElement(VList, {\n      staticClass: 'v-select-list',\n      class: this.themeClasses,\n      attrs: {\n        role: 'listbox',\n        tabindex: -1,\n      },\n      props: { dense: this.dense },\n    }, children)\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'filterable',\n\n  props: {\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n  },\n})\n","// Styles\nimport '../VTextField/VTextField.sass'\nimport './VSelect.sass'\n\n// Components\nimport VChip from '../VChip'\nimport VMenu from '../VMenu'\nimport VSelectList from './VSelectList'\n\n// Extensions\nimport VInput from '../VInput'\nimport VTextField from '../VTextField/VTextField'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\nimport Dependent from '../../mixins/dependent'\nimport Filterable from '../../mixins/filterable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { getPropertyFromItem, getObjectValueByPath, keyCodes } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, VNodeDirective, PropType, VNodeData } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304,\n}\n\n// Types\nconst baseMixins = mixins(\n  VTextField,\n  Comparable,\n  Dependent,\n  Filterable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    menu: InstanceType<typeof VMenu>\n    content: HTMLElement\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    'append-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-select',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown',\n    },\n    attach: {\n      type: null as unknown as PropType<string | boolean | Element | VNode>,\n      default: false,\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    disableLookup: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemColor: {\n      type: String,\n      default: 'primary',\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps,\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean,\n  },\n\n  data () {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      menuIsBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [] as any[],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0,\n    }\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems (): object[] {\n      return this.filterDuplicates(this.cachedItems.concat(this.items))\n    },\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple,\n      }\n    },\n    /* Used by other components to overwrite */\n    computedItems (): object[] {\n      return this.allItems\n    },\n    computedOwns (): string {\n      return `list-${this._uid}`\n    },\n    computedCounterValue (): number {\n      const value = this.multiple\n        ? this.selectedItems\n        : (this.getText(this.selectedItems[0]) || '').toString()\n\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(value)\n      }\n\n      return value.length\n    },\n    directives (): VNodeDirective[] | undefined {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: {\n          handler: this.blur,\n          closeConditional: this.closeConditional,\n          include: () => this.getOpenDependentElements(),\n        },\n      }] : undefined\n    },\n    dynamicHeight () {\n      return 'auto'\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n    hasSlot (): boolean {\n      return Boolean(this.hasChips || this.$scopedSlots.selection)\n    },\n    isDirty (): boolean {\n      return this.selectedItems.length > 0\n    },\n    listData (): object {\n      const scopeId = this.$vnode && (this.$vnode.context!.$options as { [key: string]: any })._scopeId\n      const attrs = scopeId ? {\n        [scopeId]: true,\n      } : {}\n\n      return {\n        attrs: {\n          ...attrs,\n          id: this.computedOwns,\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems,\n        },\n        on: {\n          select: this.selectItem,\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item,\n        },\n      }\n    },\n    staticList (): VNode {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used')\n      }\n\n      return this.$createElement(VSelectList, this.listData)\n    },\n    virtualizedItems (): object[] {\n      return (this.$_menuProps as any).auto\n        ? this.computedItems\n        : this.computedItems.slice(0, this.lastItem)\n    },\n    menuCanShow: () => true,\n    $_menuProps (): object {\n      let normalisedProps = typeof this.menuProps === 'string'\n        ? this.menuProps.split(',')\n        : this.menuProps\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true\n          return acc\n        }, {})\n      }\n\n      return {\n        ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0, // convert to int\n        ...normalisedProps,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      this.initialValue = val\n      this.setSelectedItems()\n    },\n    isMenuActive (val) {\n      window.setTimeout(() => this.onMenuActiveChange(val))\n    },\n    items: {\n      immediate: true,\n      handler (val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val))\n          })\n        }\n\n        this.setSelectedItems()\n      },\n    },\n  },\n\n  methods: {\n    /** @public */\n    blur (e?: Event) {\n      VTextField.options.methods.blur.call(this, e)\n      this.isMenuActive = false\n      this.isFocused = false\n      this.selectedIndex = -1\n      this.setMenuIndex(-1)\n    },\n    /** @public */\n    activateMenu () {\n      if (\n        !this.isInteractive ||\n        this.isMenuActive\n      ) return\n\n      this.isMenuActive = true\n    },\n    clearableCallback () {\n      this.setValue(this.multiple ? [] : null)\n      this.setMenuIndex(-1)\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus())\n\n      if (this.openOnClear) this.isMenuActive = true\n    },\n    closeConditional (e: Event) {\n      if (!this.isMenuActive) return true\n\n      return (\n        !this._isDestroyed &&\n\n        // Click originates from outside the menu content\n        // Multiple selects don't close when an item is clicked\n        (!this.getContent() ||\n        !this.getContent().contains(e.target as Node)) &&\n\n        // Click originates from outside the element\n        this.$el &&\n        !this.$el.contains(e.target as Node) &&\n        e.target !== this.$el\n      )\n    },\n    filterDuplicates (arr: any[]) {\n      const uniqueValues = new Map()\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]\n\n        // Do not deduplicate headers or dividers (#12517)\n        if (item.header || item.divider) {\n          uniqueValues.set(item, item)\n          continue\n        }\n\n        const val = this.getValue(item)\n\n        // TODO: comparator\n        !uniqueValues.has(val) && uniqueValues.set(val, item)\n      }\n      return Array.from(uniqueValues.values())\n    },\n    findExistingIndex (item: object) {\n      const itemValue = this.getValue(item)\n\n      return (this.internalValue || []).findIndex((i: object) => this.valueComparator(this.getValue(i), itemValue))\n    },\n    getContent () {\n      return this.$refs.menu && this.$refs.menu.$refs.content\n    },\n    genChipSelection (item: object, index: number) {\n      const isDisabled = (\n        this.isDisabled ||\n        this.getDisabled(item)\n      )\n      const isInteractive = !isDisabled && this.isInteractive\n\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: { tabindex: -1 },\n        props: {\n          close: this.deletableChips && isInteractive,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (!isInteractive) return\n\n            e.stopPropagation()\n\n            this.selectedIndex = index\n          },\n          'click:close': () => this.onChipInput(item),\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }, this.getText(item))\n    },\n    genCommaSelection (item: object, index: number, last: boolean) {\n      const color = index === this.selectedIndex && this.computedColor\n      const isDisabled = (\n        this.isDisabled ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled,\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }), `${this.getText(item)}${last ? '' : ', '}`)\n    },\n    genDefaultSlot (): (VNode | VNode[] | null)[] {\n      const selections = this.genSelections()\n      const input = this.genInput()\n\n      // If the return is an empty array\n      // push the input\n      if (Array.isArray(selections)) {\n        selections.push(input)\n      // Otherwise push it into children\n      } else {\n        selections.children = selections.children || []\n        selections.children.push(input)\n      }\n\n      return [\n        this.genFieldset(),\n        this.$createElement('div', {\n          staticClass: 'v-select__slot',\n          directives: this.directives,\n        }, [\n          this.genLabel(),\n          this.prefix ? this.genAffix('prefix') : null,\n          selections,\n          this.suffix ? this.genAffix('suffix') : null,\n          this.genClearIcon(),\n          this.genIconSlot(),\n          this.genHiddenInput(),\n        ]),\n        this.genMenu(),\n        this.genProgress(),\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void,\n      extraData?: VNodeData\n    ) {\n      const icon = VInput.options.methods.genIcon.call(this, type, cb, extraData)\n\n      if (type === 'append') {\n        // Don't allow the dropdown icon to be focused\n        icon.children![0].data = mergeData(icon.children![0].data!, {\n          attrs: {\n            tabindex: icon.children![0].componentOptions!.listeners && '-1',\n            'aria-hidden': 'true',\n            'aria-label': undefined,\n          },\n        })\n      }\n\n      return icon\n    },\n    genInput (): VNode {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n\n      input.data = mergeData(input.data!, {\n        domProps: { value: null },\n        attrs: {\n          readonly: true,\n          type: 'text',\n          'aria-readonly': String(this.isReadonly),\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n          placeholder: (!this.isDirty && (this.persistentPlaceholder || this.isFocused || !this.hasLabel)) ? this.placeholder : undefined,\n        },\n        on: { keypress: this.onKeyPress },\n      })\n\n      return input\n    },\n    genHiddenInput (): VNode {\n      return this.$createElement('input', {\n        domProps: { value: this.lazyValue },\n        attrs: {\n          type: 'hidden',\n          name: this.attrs$.name,\n        },\n      })\n    },\n    genInputSlot (): VNode {\n      const render = VTextField.options.methods.genInputSlot.call(this)\n\n      render.data!.attrs = {\n        ...render.data!.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns,\n      }\n\n      return render\n    },\n    genList (): VNode {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot()\n      } else {\n        return this.staticList\n      }\n    },\n    genListWithSlot (): VNode {\n      const slots = ['prepend-item', 'no-data', 'append-item']\n        .filter(slotName => this.$slots[slotName])\n        .map(slotName => this.$createElement('template', {\n          slot: slotName,\n        }, this.$slots[slotName]))\n      // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n      return this.$createElement(VSelectList, {\n        ...this.listData,\n      }, slots)\n    },\n    genMenu (): VNode {\n      const props = this.$_menuProps as any\n      props.activator = this.$refs['input-slot']\n\n      // Attach to root el so that\n      // menu covers prepend/append icons\n      if (\n        // TODO: make this a computed property or helper or something\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el\n      } else {\n        props.attach = this.attach\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: { role: undefined },\n        props,\n        on: {\n          input: (val: boolean) => {\n            this.isMenuActive = val\n            this.isFocused = val\n          },\n          scroll: this.onScroll,\n        },\n        ref: 'menu',\n      }, [this.genList()])\n    },\n    genSelections (): VNode {\n      let length = this.selectedItems.length\n      const children = new Array(length)\n\n      let genSelection\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection\n      } else {\n        genSelection = this.genCommaSelection\n      }\n\n      while (length--) {\n        children[length] = genSelection(\n          this.selectedItems[length],\n          length,\n          length === children.length - 1\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections',\n      }, children)\n    },\n    genSlotSelection (item: object, index: number): VNode[] | undefined {\n      return this.$scopedSlots.selection!({\n        attrs: {\n          class: 'v-chip--select',\n        },\n        parent: this,\n        item,\n        index,\n        select: (e: Event) => {\n          e.stopPropagation()\n          this.selectedIndex = index\n        },\n        selected: index === this.selectedIndex,\n        disabled: !this.isInteractive,\n      })\n    },\n    getMenuIndex () {\n      return this.$refs.menu ? (this.$refs.menu as { [key: string]: any }).listIndex : -1\n    },\n    getDisabled (item: object) {\n      return getPropertyFromItem(item, this.itemDisabled, false)\n    },\n    getText (item: object) {\n      return getPropertyFromItem(item, this.itemText, item)\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n    onBlur (e?: Event) {\n      e && this.$emit('blur', e)\n    },\n    onChipInput (item: object) {\n      if (this.multiple) this.selectItem(item)\n      else this.setValue(null)\n      // If all items have been deleted,\n      // open `v-menu`\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true\n      } else {\n        this.isMenuActive = false\n      }\n      this.selectedIndex = -1\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      if (!this.isAppendInner(e.target)) {\n        this.isMenuActive = true\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus')\n      }\n\n      this.$emit('click', e)\n    },\n    onEscDown (e: Event) {\n      e.preventDefault()\n      if (this.isMenuActive) {\n        e.stopPropagation()\n        this.isMenuActive = false\n      }\n    },\n    onKeyPress (e: KeyboardEvent) {\n      if (\n        this.multiple ||\n        !this.isInteractive ||\n        this.disableLookup\n      ) return\n\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n      const now = performance.now()\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = ''\n      }\n      this.keyboardLookupPrefix += e.key.toLowerCase()\n      this.keyboardLookupLastTime = now\n\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString()\n\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix)\n      })\n      const item = this.allItems[index]\n      if (index !== -1) {\n        this.lastItem = Math.max(this.lastItem, index + 5)\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.$nextTick(() => this.$refs.menu.getTiles())\n        setTimeout(() => this.setMenuIndex(index))\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (this.isReadonly && e.keyCode !== keyCodes.tab) return\n\n      const keyCode = e.keyCode\n      const menu = this.$refs.menu\n\n      this.$emit('keydown', e)\n\n      if (!menu) return\n\n      // If menu is active, allow default\n      // listIndex change from menu\n      if (this.isMenuActive && [keyCodes.up, keyCodes.down, keyCodes.home, keyCodes.end, keyCodes.enter].includes(keyCode)) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e)\n          this.$emit('update:list-index', menu.listIndex)\n        })\n      }\n\n      // If enter, space, open menu\n      if ([\n        keyCodes.enter,\n        keyCodes.space,\n      ].includes(keyCode)) this.activateMenu()\n\n      // If menu is not active, up/down/home/end can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n      if (\n        !this.isMenuActive &&\n        [keyCodes.up, keyCodes.down, keyCodes.home, keyCodes.end].includes(keyCode)\n      ) return this.onUpDown(e)\n\n      // If escape deactivate the menu\n      if (keyCode === keyCodes.esc) return this.onEscDown(e)\n\n      // If tab - select item or close menu\n      if (keyCode === keyCodes.tab) return this.onTabDown(e)\n\n      // If space preventDefault\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e)\n    },\n    onMenuActiveChange (val: boolean) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (\n        (this.multiple && !val) ||\n        this.getMenuIndex() > -1\n      ) return\n\n      const menu = this.$refs.menu\n\n      if (!menu || !this.isDirty) return\n\n      // When menu opens, set index of first active item\n      this.$refs.menu.getTiles()\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i)\n          break\n        }\n      }\n    },\n    onMouseUp (e: MouseEvent) {\n      // eslint-disable-next-line sonarjs/no-collapsible-if\n      if (\n        this.hasMouseDown &&\n        e.which !== 3 &&\n        this.isInteractive\n      ) {\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isAppendInner(e.target)) {\n          this.$nextTick(() => (this.isMenuActive = !this.isMenuActive))\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e)\n    },\n    onScroll () {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => (this.getContent().scrollTop = 0))\n      } else {\n        if (this.lastItem > this.computedItems.length) return\n\n        const showMoreItems = (\n          this.getContent().scrollHeight -\n          (this.getContent().scrollTop +\n          this.getContent().clientHeight)\n        ) < 200\n\n        if (showMoreItems) {\n          this.lastItem += 20\n        }\n      }\n    },\n    onSpaceDown (e: KeyboardEvent) {\n      e.preventDefault()\n    },\n    onTabDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      const activeTile = menu.activeTile\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (\n        !this.multiple &&\n        activeTile &&\n        this.isMenuActive\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        activeTile.click()\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e)\n      }\n    },\n    onUpDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      e.preventDefault()\n\n      // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n      if (this.multiple) return this.activateMenu()\n\n      const keyCode = e.keyCode\n\n      // Cycle through available values to achieve\n      // select native behavior\n      menu.isBooted = true\n\n      window.requestAnimationFrame(() => {\n        menu.getTiles()\n\n        if (!menu.hasClickableTiles) return this.activateMenu()\n\n        switch (keyCode) {\n          case keyCodes.up:\n            menu.prevTile()\n            break\n          case keyCodes.down:\n            menu.nextTile()\n            break\n          case keyCodes.home:\n            menu.firstTile()\n            break\n          case keyCodes.end:\n            menu.lastTile()\n            break\n        }\n        this.selectItem(this.allItems[this.getMenuIndex()])\n      })\n    },\n    selectItem (item: object) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.isMenuActive = false\n      } else {\n        const internalValue = (this.internalValue || []).slice()\n        const i = this.findExistingIndex(item)\n\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item)\n        this.setValue(internalValue.map((i: object) => {\n          return this.returnObject ? i : this.getValue(i)\n        }))\n\n        // When selecting multiple\n        // adjust menu after each\n        // selection\n        this.$nextTick(() => {\n          this.$refs.menu &&\n            (this.$refs.menu as { [key: string]: any }).updateDimensions()\n        })\n\n        // There is no item to re-highlight\n        // when selections are hidden\n        if (this.hideSelected) {\n          this.setMenuIndex(-1)\n        } else {\n          const index = this.allItems.indexOf(item)\n          if (~index) {\n            this.$nextTick(() => this.$refs.menu.getTiles())\n            setTimeout(() => this.setMenuIndex(index))\n          }\n        }\n      }\n    },\n    setMenuIndex (index: number) {\n      this.$refs.menu && ((this.$refs.menu as { [key: string]: any }).listIndex = index)\n    },\n    setSelectedItems () {\n      const selectedItems = []\n      const values = !this.multiple || !Array.isArray(this.internalValue)\n        ? [this.internalValue]\n        : this.internalValue\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(\n          this.getValue(v),\n          this.getValue(value)\n        ))\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index])\n        }\n      }\n\n      this.selectedItems = selectedItems\n    },\n    setValue (value: any) {\n      if (!this.valueComparator(value, this.internalValue)) {\n        this.internalValue = value\n        this.$emit('change', value)\n      }\n    },\n    isAppendInner (target: any) {\n      // return true if append inner is present\n      // and the target is itself or inside\n      const appendInner = this.$refs['append-inner']\n\n      return appendInner && (appendInner === target || appendInner.contains(target))\n    },\n  },\n})\n","// Styles\nimport './VSubheader.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-subheader',\n\n  props: {\n    inset: Boolean,\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-subheader',\n      class: {\n        'v-subheader--inset': this.inset,\n        ...this.themeClasses,\n      },\n      attrs: this.$attrs,\n      on: this.$listeners,\n    }, this.$slots.default)\n  },\n})\n"],"sourceRoot":""}