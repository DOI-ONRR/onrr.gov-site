{"version":3,"file":"js/IBMPCollection.44ea617b.js","mappings":"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","sources":["webpack://onrr-frontend-app-vue/./src/components/collections/IBMP.vue?bd18","webpack://onrr-frontend-app-vue/src/components/collections/IBMP.vue","webpack://onrr-frontend-app-vue/./src/components/collections/IBMP.vue?5e1f","webpack://onrr-frontend-app-vue/./src/components/collections/IBMP.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"pt-4\"},[_c('v-card',[_c('v-data-table',{staticClass:\"collection-data-table\",attrs:{\"headers\":_vm.headers,\"items\":_vm.collectionItems,\"item-key\":\"title\"},scopedSlots:_vm._u([{key:\"top\",fn:function(){return [_c('v-container',[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"6\"}},[_c('SelectField',{attrs:{\"fields\":_vm.designatedAreaInputField}})],1),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"6\"}},[_c('MultipleSelectField',{attrs:{\"fields\":_vm.ibmpYearsInputField}})],1)],1)],1)]},proxy:true},{key:\"item.designatedArea\",fn:function(ref){\nvar item = ref.item;\nreturn [_vm._v(\" \"+_vm._s(item.designatedArea)+\" \")]}},{key:\"item.year\",fn:function(ref){\nvar item = ref.item;\nreturn [_vm._v(\" \"+_vm._s(item.year)+\" \")]}},{key:\"item.month\",fn:function(ref){\nvar item = ref.item;\nreturn [_vm._v(\" \"+_vm._s(_vm.formatMonth(item.month))+\" \")]}},{key:\"item.price\",fn:function(ref){\nvar item = ref.item;\nreturn [_vm._v(\" \"+_vm._s(_vm.formatToDollarInt(item.price))+\" \")]}}],null,true)})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n   <div class=\"pt-4\">\n        <v-card>\n            <v-data-table\n                :headers=\"headers\"\n                :items=\"collectionItems\"\n                item-key=\"title\"\n                class=\"collection-data-table\">\n                <template v-slot:top>\n                    <v-container>\n                        <v-row>\n                            <v-col cols=\"12\" sm=\"6\">\n                                <SelectField :fields=\"designatedAreaInputField\"></SelectField>\n                            </v-col>\n                            <v-col cols=\"12\" sm=\"6\">\n                                <MultipleSelectField :fields=\"ibmpYearsInputField\"></MultipleSelectField>\n                            </v-col>\n                        </v-row>\n                    </v-container>\n                </template>\n                <template v-slot:[`item.designatedArea`]=\"{ item }\">\n                    {{ item.designatedArea }}\n                </template>\n                <template v-slot:[`item.year`]=\"{ item }\">\n                    {{ item.year }}\n                </template>\n                <template v-slot:[`item.month`]=\"{ item }\">\n                    {{ formatMonth(item.month) }}\n                </template>\n                <template v-slot:[`item.price`]=\"{ item }\">\n                    {{ formatToDollarInt(item.price) }}\n                </template>\n            </v-data-table>\n        </v-card>\n    </div>\n</template>\n\n<script>\nimport {\n  getYear,\n  getMonth,\n  formatToDollarInt\n} from '@/js/utils'\nconst SelectField = () => import(/* webpackChunkName: \"SelectField\" */ '@/components/inputs/SelectField')\nconst MultipleSelectField = () => import(/* webpackChunkName: \"MultipleSelectField\" */ '@/components/inputs/MultipleSelectField')\n\nexport default {\n  name: 'IndexZonesCollection',\n  data: () => ({\n    designatedAreaInputField: {\n      items: [],\n      label: 'All Areas',\n      ref: 'designatedAreaSelectInput',\n      selected: null,\n      color: 'secondary',\n      icon: 'mdi-chevron-down',\n      params: 'designated_area',\n      clearable: true\n    },\n    ibmpYearsInputField: {\n      items: [],\n      label: 'All Years',\n      ref: 'indexZoneSelectInput',\n      selected: null,\n      color: 'secondary',\n      icon: 'mdi-chevron-down',\n      params: 'years'\n    }\n  }),\n  props: {\n    collection: [Array, Object]\n  },\n  components: {\n    SelectField,\n    MultipleSelectField\n  },\n  methods: {\n    getMonth: getMonth,\n    getYear: getYear,\n    formatToDollarInt: formatToDollarInt,\n    formatMonth(date) {\n      return getMonth(date, 'long')\n    },\n    formatYear(date) {\n      return getYear(date)\n    },\n    formatPrice(price) {\n      return formatToDollarInt(price)\n    },\n    designatedAreaList() {\n        let designatedAreaArr = []\n        this.collectionItems && this.collectionItems.map(item => {\n          // console.log('this.collectionItems item: ', item)\n          if (item.designatedArea) {\n            if (!designatedAreaArr.includes(item.designatedArea)) {\n              designatedAreaArr.push(item.designatedArea)\n            }\n          }            \n        })\n\n        this.designatedAreaInputField.items = [...designatedAreaArr.sort()]\n    },\n    yearList() {\n        let yearsArr = []\n        this.collectionItems && this.collectionItems.map(item => {\n          // console.log('this.collectionItems item: ', item)\n          if (item.year) {\n            if (!yearsArr.includes(item.year)) {\n              yearsArr.push(item.year)\n            }\n          }            \n        })\n\n        this.ibmpYearsInputField.items = [...yearsArr.sort()].reverse()\n    },\n    designatedAreaFilter(value) {\n      console.log('designatedFilter: ', value)\n       if (!this.designatedAreaInputField.selected || this.designatedAreaInputField.selected === null || this.designatedAreaInputField.selected.length === 0) {\n          return true\n       }\n\n      return value.toLowerCase() === this.designatedAreaInputField.selected.toLowerCase()\n    },\n    yearFilter(value) {\n      // console.log('YearFilter: ', value)\n       if (!this.ibmpYearsInputField.selected || this.ibmpYearsInputField.selected === null || this.ibmpYearsInputField.selected.length === 0) {\n          return true\n       }\n\n       return this.ibmpYearsInputField.selected.indexOf(value) >= 0\n    }\n  },\n  computed: {\n    headers() {\n      return [\n          {\n              text: 'Designated Area',\n              align: 'start',\n              sortable: true,\n              value: 'designatedArea',\n              filter: this.designatedAreaFilter,\n          },\n          {\n              text: 'Year',\n              align: 'start',\n              sortable: true,\n              value: 'year',\n              filter: this.yearFilter,\n          },\n          {\n              text: 'Month',\n              align: 'start',\n              sortable: false,\n              value: 'month',\n          },\n          {\n              text: 'Condensate (02)',\n              align: 'end',\n              sortable: false,\n              value: 'condensate02',\n          },\n          {\n              text: 'Sweet (61)',\n              align: 'end',\n              sortable: false,\n              value: 'sweet61',\n          },\n          {\n              text: 'Sour (62)',\n              align: 'end',\n              sortable: false,\n              value: 'sour62',\n          },\n          {\n              text: 'Asphaltic (63)',\n              align: 'end',\n              sortable: false,\n              value: 'asphaltic63',\n          },\n          {\n              text: 'Black Wax (64)',\n              align: 'end',\n              sortable: false,\n              value: 'blackWax64',\n          },\n          {\n              text: 'Yellow Wax (65)',\n              align: 'end',\n              sortable: false,\n              value: 'yellowWax65',\n          }\n      ]\n    },\n    collectionItems() {\n      let items = []\n      this.collection && this.collection.map(item => {\n        item.ibmp_line_items.forEach(row => {\n          let nObj = {}\n          nObj.year = this.formatYear(item.date)\n          nObj.month = item.date\n          nObj.designatedArea = row.designatedArea\n          nObj.condensate02 =  isNaN(row.condensate02) ? row.condensate02 : formatToDollarInt(row.condensate02)\n          nObj.sweet61 =  isNaN(row.sweet61) ? row.sweet61 : this.formatToDollarInt(row.sweet61)\n          nObj.sour62 = isNaN(row.sour62) ? row.sour62 : this.formatToDollarInt(row.sour62)\n          nObj.asphaltic63 =  isNaN(row.asphaltic63) ? row.asphaltic63 : this.formatToDollarInt(row.asphaltic63)\n          nObj.blackWax64 = isNaN(row.blackWax64) ? row.blackWax64 : this.formatToDollarInt(row.blackWax64)\n          nObj.yellowWax65 =  isNaN(row.yellowWax65) ? row.yellowWax65 : this.formatToDollarInt(row.yellowWax65)\n          items.push(nObj)\n        })\n      })\n\n      return items\n    }\n  },\n  created() {\n    setTimeout(() => {\n      this.designatedAreaList()\n      this.yearList()\n    }, 300);\n  },\n  mounted() {\n    const designated_area = this.$route.query.designated_area\n    const years = this.$route.query.years && this.$route.query.years.split(',')\n    this.designatedAreaInputField.selected = designated_area || null\n    this.ibmpYearsInputField.selected = years || null\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-39[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./IBMP.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-39[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./IBMP.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./IBMP.vue?vue&type=template&id=c31d53b2&scoped=true&\"\nimport script from \"./IBMP.vue?vue&type=script&lang=js&\"\nexport * from \"./IBMP.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c31d53b2\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VDataTable } from 'vuetify/lib/components/VDataTable';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VCard,VCol,VContainer,VDataTable,VRow})\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","headers","collectionItems","scopedSlots","_u","key","fn","designatedAreaInputField","ibmpYearsInputField","proxy","ref","item","_v","_s","designatedArea","year","formatMonth","month","formatToDollarInt","price","staticRenderFns","SelectField","MultipleSelectField","name","data","items","label","selected","color","icon","params","clearable","props","collection","Array","Object","components","methods","getMonth","getYear","date","formatYear","formatPrice","designatedAreaList","designatedAreaArr","yearList","yearsArr","designatedAreaFilter","value","console","log","toLowerCase","yearFilter","computed","text","align","sortable","filter","map","ibmp_line_items","forEach","row","nObj","condensate02","sweet61","sour62","isNaN","asphaltic63","blackWax64","yellowWax65","push","created","setTimeout","mounted","designated_area","$route","query","years","split","component","VCard"],"sourceRoot":""}